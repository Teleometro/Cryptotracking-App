/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package au.edu.sydney.soft3202.task1;

import org.junit.jupiter.api.Test;

import javafx.util.Pair;

import static org.junit.jupiter.api.Assertions.*;

import java.util.List;

class AppTest {


    @Test
    void addItemTest1() {
        ShoppingBasket sb = new ShoppingBasket();
        sb.addItem("oRange", 3);
        String o = sb.getItems().get(0).getKey();
        Integer i = sb.getItems().get(0).getValue();
        assertEquals(i, 3);
    }

    @Test
    void addItemTest2() {
        ShoppingBasket sb = new ShoppingBasket();
        sb.addItem("aPple", 3);
        String o = sb.getItems().get(0).getKey();
        assertEquals(o.toLowerCase(), "apple");
        Integer i = sb.getItems().get(0).getValue();
        assertEquals(i, 3);
    }

    @Test
    void addItemTest3() {
        ShoppingBasket sb = new ShoppingBasket();
        sb.addItem("peAr", 2);
        String o = sb.getItems().get(0).getKey();
        assertEquals(o.toLowerCase(), "pear");
        Integer i = sb.getItems().get(0).getValue();
        assertEquals(i, 2);
    }

    @Test
    void addItemTest4() {
        ShoppingBasket sb = new ShoppingBasket();
        sb.addItem("banana", 3);
        String o = sb.getItems().get(0).getKey();
        assertEquals(o, "banana");
        Integer i = sb.getItems().get(0).getValue();
        assertEquals(i, 3);
    }

    @Test
    void addItemTest5() {
        ShoppingBasket sb = new ShoppingBasket();
        sb.addItem("BaNaNa", 3);
        String o = sb.getItems().get(0).getKey();
        assertEquals(o.toLowerCase(), "banana");
    }

    @Test
    void addInvalidItemTest1() {
        ShoppingBasket sb = new ShoppingBasket();
        assertThrows(IllegalArgumentException.class, () -> sb.addItem("belugawhale", 3));
    }

    @Test
    void addInvalidItemTest2() {
        ShoppingBasket sb = new ShoppingBasket();
        assertThrows(IllegalArgumentException.class, () -> sb.addItem("apple", 0));
    }

    @Test
    void addInvalidItemTest3() {
        ShoppingBasket sb = new ShoppingBasket();
        assertThrows(IllegalArgumentException.class, () -> sb.addItem("apple", -1));
    }

    @Test
    void addInvalidItemTest4() {
        ShoppingBasket sb = new ShoppingBasket();
        assertThrows(IllegalArgumentException.class, () -> sb.addItem("orange", 0));
    }

    @Test
    void addInvalidItemTest5() {
        ShoppingBasket sb = new ShoppingBasket();
        assertThrows(IllegalArgumentException.class, () -> sb.addItem("orange", -1));
    }

    @Test
    void clearTest() {
        ShoppingBasket sb = new ShoppingBasket();
        sb.addItem("BaNaNa", 3);
        sb.addItem("orange", 4);
        sb.addItem("apple", 2);
        assertEquals(sb.getItems().size(), 3);
        sb.clear();
        assertEquals(sb.getItems().size(), 0);
    }

    @Test
    void valueTest() {
        ShoppingBasket sb = new ShoppingBasket();
        sb.addItem("BaNaNa", 2);
        sb.addItem("orange", 3);
        sb.addItem("apple", 2);
        sb.addItem("pear", 2);
        assertEquals(sb.getValue(), 24.65);

    }

    @Test
    void getItems() {
        ShoppingBasket sb = new ShoppingBasket();
        sb.addItem("orange", 3);
        List<Pair<String, Integer>> o = sb.getItems();
        o.clear();
        assertNotEquals(sb.getItems().size(), 0);
    }
}
